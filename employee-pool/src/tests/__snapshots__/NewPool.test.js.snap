// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewPool renders NewPool component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="center"
        >
          <h1>
            Employee Pool
          </h1>
          <form>
            <h3>
              User
            </h3>
            <input
              data-testid="input-name"
              id="name"
              placeholder="User"
              type="User"
              value=""
            />
            <h3>
              Password:
            </h3>
            <input
              data-testid="input-password"
              id="name"
              placeholder="Password"
              type="text"
              value=""
            />
            <br />
            <button
              class="btn"
              data-testid="btn-submit"
              type="submit"
            >
              Login
            </button>
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="center"
      >
        <h1>
          Employee Pool
        </h1>
        <form>
          <h3>
            User
          </h3>
          <input
            data-testid="input-name"
            id="name"
            placeholder="User"
            type="User"
            value=""
          />
          <h3>
            Password:
          </h3>
          <input
            data-testid="input-password"
            id="name"
            placeholder="Password"
            type="text"
            value=""
          />
          <br />
          <button
            class="btn"
            data-testid="btn-submit"
            type="submit"
          >
            Login
          </button>
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`isDataAPIAvailable renders learn react link 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="center"
        >
          <h1>
            Employee Pool
          </h1>
          <form>
            <h3>
              User
            </h3>
            <input
              data-testid="input-name"
              id="name"
              placeholder="User"
              type="User"
              value=""
            />
            <h3>
              Password:
            </h3>
            <input
              data-testid="input-password"
              id="name"
              placeholder="Password"
              type="text"
              value=""
            />
            <br />
            <button
              class="btn"
              data-testid="btn-submit"
              type="submit"
            >
              Login
            </button>
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="center"
      >
        <h1>
          Employee Pool
        </h1>
        <form>
          <h3>
            User
          </h3>
          <input
            data-testid="input-name"
            id="name"
            placeholder="User"
            type="User"
            value=""
          />
          <h3>
            Password:
          </h3>
          <input
            data-testid="input-password"
            id="name"
            placeholder="Password"
            type="text"
            value=""
          />
          <br />
          <button
            class="btn"
            data-testid="btn-submit"
            type="submit"
          >
            Login
          </button>
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`renders learn react link 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="center"
        >
          <h1>
            Employee Pool
          </h1>
          <form>
            <h3>
              User
            </h3>
            <input
              data-testid="input-name"
              id="name"
              placeholder="User"
              type="User"
              value=""
            />
            <h3>
              Password:
            </h3>
            <input
              data-testid="input-password"
              id="name"
              placeholder="Password"
              type="text"
              value=""
            />
            <br />
            <button
              class="btn"
              data-testid="btn-submit"
              type="submit"
            >
              Login
            </button>
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="center"
      >
        <h1>
          Employee Pool
        </h1>
        <form>
          <h3>
            User
          </h3>
          <input
            data-testid="input-name"
            id="name"
            placeholder="User"
            type="User"
            value=""
          />
          <h3>
            Password:
          </h3>
          <input
            data-testid="input-password"
            id="name"
            placeholder="Password"
            type="text"
            value=""
          />
          <br />
          <button
            class="btn"
            data-testid="btn-submit"
            type="submit"
          >
            Login
          </button>
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
